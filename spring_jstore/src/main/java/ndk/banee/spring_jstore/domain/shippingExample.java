package ndk.banee.spring_jstore.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class shippingExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table shipping
     *
     * @mbg.generated Sun May 24 14:31:24 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table shipping
     *
     * @mbg.generated Sun May 24 14:31:24 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table shipping
     *
     * @mbg.generated Sun May 24 14:31:24 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shipping
     *
     * @mbg.generated Sun May 24 14:31:24 CST 2020
     */
    public shippingExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shipping
     *
     * @mbg.generated Sun May 24 14:31:24 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shipping
     *
     * @mbg.generated Sun May 24 14:31:24 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shipping
     *
     * @mbg.generated Sun May 24 14:31:24 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shipping
     *
     * @mbg.generated Sun May 24 14:31:24 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shipping
     *
     * @mbg.generated Sun May 24 14:31:24 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shipping
     *
     * @mbg.generated Sun May 24 14:31:24 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shipping
     *
     * @mbg.generated Sun May 24 14:31:24 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shipping
     *
     * @mbg.generated Sun May 24 14:31:24 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shipping
     *
     * @mbg.generated Sun May 24 14:31:24 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shipping
     *
     * @mbg.generated Sun May 24 14:31:24 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table shipping
     *
     * @mbg.generated Sun May 24 14:31:24 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andShippingidIsNull() {
            addCriterion("SHIPPINGID is null");
            return (Criteria) this;
        }

        public Criteria andShippingidIsNotNull() {
            addCriterion("SHIPPINGID is not null");
            return (Criteria) this;
        }

        public Criteria andShippingidEqualTo(Integer value) {
            addCriterion("SHIPPINGID =", value, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidNotEqualTo(Integer value) {
            addCriterion("SHIPPINGID <>", value, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidGreaterThan(Integer value) {
            addCriterion("SHIPPINGID >", value, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidGreaterThanOrEqualTo(Integer value) {
            addCriterion("SHIPPINGID >=", value, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidLessThan(Integer value) {
            addCriterion("SHIPPINGID <", value, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidLessThanOrEqualTo(Integer value) {
            addCriterion("SHIPPINGID <=", value, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidIn(List<Integer> values) {
            addCriterion("SHIPPINGID in", values, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidNotIn(List<Integer> values) {
            addCriterion("SHIPPINGID not in", values, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidBetween(Integer value1, Integer value2) {
            addCriterion("SHIPPINGID between", value1, value2, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidNotBetween(Integer value1, Integer value2) {
            addCriterion("SHIPPINGID not between", value1, value2, "shippingid");
            return (Criteria) this;
        }

        public Criteria andOrderidIsNull() {
            addCriterion("ORDERID is null");
            return (Criteria) this;
        }

        public Criteria andOrderidIsNotNull() {
            addCriterion("ORDERID is not null");
            return (Criteria) this;
        }

        public Criteria andOrderidEqualTo(Integer value) {
            addCriterion("ORDERID =", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidNotEqualTo(Integer value) {
            addCriterion("ORDERID <>", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidGreaterThan(Integer value) {
            addCriterion("ORDERID >", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidGreaterThanOrEqualTo(Integer value) {
            addCriterion("ORDERID >=", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidLessThan(Integer value) {
            addCriterion("ORDERID <", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidLessThanOrEqualTo(Integer value) {
            addCriterion("ORDERID <=", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidIn(List<Integer> values) {
            addCriterion("ORDERID in", values, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidNotIn(List<Integer> values) {
            addCriterion("ORDERID not in", values, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidBetween(Integer value1, Integer value2) {
            addCriterion("ORDERID between", value1, value2, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidNotBetween(Integer value1, Integer value2) {
            addCriterion("ORDERID not between", value1, value2, "orderid");
            return (Criteria) this;
        }

        public Criteria andShippingfeeIsNull() {
            addCriterion("SHIPPINGFEE is null");
            return (Criteria) this;
        }

        public Criteria andShippingfeeIsNotNull() {
            addCriterion("SHIPPINGFEE is not null");
            return (Criteria) this;
        }

        public Criteria andShippingfeeEqualTo(Float value) {
            addCriterion("SHIPPINGFEE =", value, "shippingfee");
            return (Criteria) this;
        }

        public Criteria andShippingfeeNotEqualTo(Float value) {
            addCriterion("SHIPPINGFEE <>", value, "shippingfee");
            return (Criteria) this;
        }

        public Criteria andShippingfeeGreaterThan(Float value) {
            addCriterion("SHIPPINGFEE >", value, "shippingfee");
            return (Criteria) this;
        }

        public Criteria andShippingfeeGreaterThanOrEqualTo(Float value) {
            addCriterion("SHIPPINGFEE >=", value, "shippingfee");
            return (Criteria) this;
        }

        public Criteria andShippingfeeLessThan(Float value) {
            addCriterion("SHIPPINGFEE <", value, "shippingfee");
            return (Criteria) this;
        }

        public Criteria andShippingfeeLessThanOrEqualTo(Float value) {
            addCriterion("SHIPPINGFEE <=", value, "shippingfee");
            return (Criteria) this;
        }

        public Criteria andShippingfeeIn(List<Float> values) {
            addCriterion("SHIPPINGFEE in", values, "shippingfee");
            return (Criteria) this;
        }

        public Criteria andShippingfeeNotIn(List<Float> values) {
            addCriterion("SHIPPINGFEE not in", values, "shippingfee");
            return (Criteria) this;
        }

        public Criteria andShippingfeeBetween(Float value1, Float value2) {
            addCriterion("SHIPPINGFEE between", value1, value2, "shippingfee");
            return (Criteria) this;
        }

        public Criteria andShippingfeeNotBetween(Float value1, Float value2) {
            addCriterion("SHIPPINGFEE not between", value1, value2, "shippingfee");
            return (Criteria) this;
        }

        public Criteria andShippingtimeIsNull() {
            addCriterion("SHIPPINGTIME is null");
            return (Criteria) this;
        }

        public Criteria andShippingtimeIsNotNull() {
            addCriterion("SHIPPINGTIME is not null");
            return (Criteria) this;
        }

        public Criteria andShippingtimeEqualTo(Date value) {
            addCriterion("SHIPPINGTIME =", value, "shippingtime");
            return (Criteria) this;
        }

        public Criteria andShippingtimeNotEqualTo(Date value) {
            addCriterion("SHIPPINGTIME <>", value, "shippingtime");
            return (Criteria) this;
        }

        public Criteria andShippingtimeGreaterThan(Date value) {
            addCriterion("SHIPPINGTIME >", value, "shippingtime");
            return (Criteria) this;
        }

        public Criteria andShippingtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("SHIPPINGTIME >=", value, "shippingtime");
            return (Criteria) this;
        }

        public Criteria andShippingtimeLessThan(Date value) {
            addCriterion("SHIPPINGTIME <", value, "shippingtime");
            return (Criteria) this;
        }

        public Criteria andShippingtimeLessThanOrEqualTo(Date value) {
            addCriterion("SHIPPINGTIME <=", value, "shippingtime");
            return (Criteria) this;
        }

        public Criteria andShippingtimeIn(List<Date> values) {
            addCriterion("SHIPPINGTIME in", values, "shippingtime");
            return (Criteria) this;
        }

        public Criteria andShippingtimeNotIn(List<Date> values) {
            addCriterion("SHIPPINGTIME not in", values, "shippingtime");
            return (Criteria) this;
        }

        public Criteria andShippingtimeBetween(Date value1, Date value2) {
            addCriterion("SHIPPINGTIME between", value1, value2, "shippingtime");
            return (Criteria) this;
        }

        public Criteria andShippingtimeNotBetween(Date value1, Date value2) {
            addCriterion("SHIPPINGTIME not between", value1, value2, "shippingtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table shipping
     *
     * @mbg.generated do_not_delete_during_merge Sun May 24 14:31:24 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table shipping
     *
     * @mbg.generated Sun May 24 14:31:24 CST 2020
     */
    public static class Criterion {
        private final String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private final String typeHandler;

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }
    }
}
